19c19
< FIRMWARE_ABI_VERSION="7.1.0"
---
> FIRMWARE_ABI_VERSION="7.2.0"
44c44
< 	KEYWORDS="amd64 ~arm ~arm64 ~loong ~ppc ~ppc64 ~riscv ~x86"
---
> 	[[ "${PV}" != *_rc* ]] && KEYWORDS="amd64 ~arm ~arm64 ~loong ~ppc ~ppc64 ~riscv ~x86"
55c55
< IUSE="accessibility +aio alsa bpf bzip2 capstone +caps +curl debug ${QEMU_DOC_USEFLAG}
---
> IUSE="accessibility +aio alsa bpf bzip2 capstone +curl debug ${QEMU_DOC_USEFLAG}
60c60
< 	plugins +png pulseaudio python rbd sasl +seccomp sdl sdl-image selinux
---
> 	plugins +png pulseaudio python rbd sasl sdl sdl-image selinux
63c63
< 	usbredir vde +vhost-net vhost-user-fs virgl virtfs +vnc vte xattr xen
---
> 	usbredir vde +vhost-net virgl virtfs +vnc vte xattr xen
120c120,121
< REQUIRED_USE="${PYTHON_REQUIRED_USE}
---
> REQUIRED_USE="
> 	${PYTHON_REQUIRED_USE}
132d132
< 	vhost-user-fs? ( caps seccomp )
134c134
< 	virtfs? ( caps xattr )
---
> 	virtfs? ( xattr )
158a159,160
> 	sys-libs/libcap-ng[static-libs(+)]
> 	>=sys-libs/libseccomp-2.1.0[static-libs(+)]
169d170
< 	caps? ( sys-libs/libcap-ng[static-libs(+)] )
212d212
< 	seccomp? ( >=sys-libs/libseccomp-2.1.0[static-libs(+)] )
309d308
< 	"${FILESDIR}"/${PN}-7.1.0-strings.patch
456c455
< 	rm -r dtc meson roms/*/ slirp || die
---
> 	rm -r dtc meson roms/*/ || die
555d553
< 		$(conf_notuser caps cap-ng)
582,583c580
< 		$(conf_notuser seccomp)
< 		$(conf_notuser slirp slirp system)
---
> 		$(conf_notuser slirp)
626a624,625
> 			--disable-cap-ng
> 			--disable-seccomp
634a634,635
> 			--enable-cap-ng
> 			--enable-seccomp
637,646d637
< 
< 		for target in ${IUSE_SOFTMMU_TARGETS}; do
< 			if use "qemu_softmmu_targets_${target}"; then
< 				conf_opts+=(
< 					# For some reason, adding this with the setting set
< 					# to on *or* off makes the build always fail.
< 					# --with-devices-${target}=gentoo
< 				)
< 			fi
< 		done
653a645,646
> 			--enable-cap-ng
> 			--enable-seccomp
698,712d690
< 
< 			# Needed to rework vhost-user-fs handling thanks to https://gitlab.com/qemu-project/qemu/-/commit/5166dab
< 			# The option was converted into being configurable by
< 			# Kconfig's. So, to enable it, we insert the necessary
< 			# options into each arch's softmmu target gentoo.mak file,
< 			# then configure with --with-devices-${target}=gentoo.
< 			if use vhost-user-fs; then
< 				echo "CONFIG_VHOST_USER_FS=y for ${target}-softmmu" || die
< 				echo "CONFIG_VIRTIO=y" >> "configs/devices/${target}-softmmu/gentoo.mak" || die
< 				echo "CONFIG_VHOST_USER_FS=y" >> "configs/devices/${target}-softmmu/gentoo.mak" || die
< 			else
< 				echo "CONFIG_VHOST_USER_FS=n for ${target}-softmmu" || die
< 				echo "CONFIG_VIRTIO=n" >> "configs/devices/${target}-softmmu/gentoo.mak" || die
< 				echo "CONFIG_VHOST_USER_FS=n" >> "configs/devices/${target}-softmmu/gentoo.mak" || die
< 			fi
